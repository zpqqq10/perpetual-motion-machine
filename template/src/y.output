Terminals unused in grammar

    COLON
    DQUOTE
    SQUOTE
    FOR
    IN
    TO
    BREAK
    STRING_VALUE
    STRING
    AND
    OR
    XOR


State 119 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | func_decl
    6     | proto_decl
    7     | COMMENT

    8 var_decl: type_specifier vars SEMICOLON

    9 vars: vars COMMA var
   10     | var

   11 var: IDENTIFIER
   12    | IDENTIFIER LEFTSB INTEGER_VALUE RIGHTSB
   13    | IDENTIFIER ASSIGN expression

   14 type_specifier: INT
   15               | FLOAT
   16               | BOOL
   17               | VOID

   18 func_decl: type_specifier IDENTIFIER LEFTP params RIGHTP compound_stmt

   19 proto_decl: type_specifier IDENTIFIER LEFTP params RIGHTP SEMICOLON

   20 params: param_list
   21       | VOID
   22       | %empty

   23 param_list: param_list COMMA param
   24           | param

   25 param: type_specifier IDENTIFIER
   26      | type_specifier IDENTIFIER LEFTSB RIGHTSB

   27 compound_stmt: LEFTB stmt_list RIGHTB

   28 stmt_list: stmt_list stmt
   29          | %empty

   30 stmt: expression_stmt
   31     | compound_stmt
   32     | selection_stmt
   33     | iteration_stmt
   34     | return_stmt
   35     | var_decl
   36     | COMMENT

   37 expression_stmt: expression SEMICOLON
   38                | SEMICOLON

   39 selection_stmt: IF LEFTP expression RIGHTP stmt
   40               | IF LEFTP expression RIGHTP stmt ELSE stmt

   41 iteration_stmt: WHILE LEFTP expression RIGHTP stmt

   42 return_stmt: RETURN SEMICOLON
   43            | RETURN expression SEMICOLON

   44 expression: variable ASSIGN expression
   45           | relation_expr

   46 variable: IDENTIFIER
   47         | IDENTIFIER LEFTSB expression RIGHTSB

   48 relation_expr: relation_expr LE addition
   49              | relation_expr LT addition
   50              | relation_expr GT addition
   51              | relation_expr GE addition
   52              | relation_expr EQ addition
   53              | relation_expr NEQ addition
   54              | addition

   55 addition: addition ADD term
   56         | addition SUB term
   57         | term

   58 term: term MUL factor
   59     | term DIV factor
   60     | factor

   61 factor: LEFTP expression RIGHTP
   62       | SUB factor
   63       | variable
   64       | call
   65       | value

   66 value: INTEGER_VALUE
   67      | FLOAT_VALUE
   68      | TRUE
   69      | FALSE

   70 call: IDENTIFIER LEFTP args RIGHTP

   71 args: arg_list
   72     | %empty

   73 arg_list: arg_list COMMA expression
   74         | expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    COLON (258)
    SEMICOLON (259) 8 19 37 38 42 43
    COMMA (260) 9 23 73
    LEFTP (261) 18 19 39 40 41 61 70
    RIGHTP (262) 18 19 39 40 41 61 70
    LEFTB (263) 27
    RIGHTB (264) 27
    LEFTSB (265) 12 26 47
    RIGHTSB (266) 12 26 47
    DQUOTE (267)
    SQUOTE (268)
    RETURN (269) 42 43
    FOR (270)
    IN (271)
    TO (272)
    WHILE (273) 41
    IF (274) 39 40
    ELSE (275) 40
    BREAK (276)
    IDENTIFIER <str> (277) 11 12 13 18 19 25 26 46 47 70
    STRING_VALUE <str> (278)
    COMMENT <str> (279) 7 36
    INT <valuetext> (280) 14
    FLOAT <valuetext> (281) 15
    BOOL <valuetext> (282) 16
    VOID <valuetext> (283) 17 21
    STRING <valuetext> (284)
    INTEGER_VALUE <valuetext> (285) 12 66
    FLOAT_VALUE <valuetext> (286) 67
    FALSE <valuetext> (287) 69
    TRUE <valuetext> (288) 68
    ASSIGN (289) 13 44
    GT <Op> (290) 50
    LT <Op> (291) 49
    EQ <Op> (292) 52
    NEQ <Op> (293) 53
    GE <Op> (294) 51
    LE <Op> (295) 48
    AND (296)
    OR (297)
    XOR (298)
    ADD <Op> (299) 55
    SUB <Op> (300) 56 62
    MUL <Op> (301) 58
    DIV <Op> (302) 59
    UMINUS <Op> (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    decl_list (51)
        on left: 2 3
        on right: 1 2
    decl <node> (52)
        on left: 4 5 6 7
        on right: 2 3
    var_decl <node> (53)
        on left: 8
        on right: 4 35
    vars <node> (54)
        on left: 9 10
        on right: 8 9
    var <node> (55)
        on left: 11 12 13
        on right: 9 10
    type_specifier <valueType> (56)
        on left: 14 15 16 17
        on right: 8 18 19 25 26
    func_decl <node> (57)
        on left: 18
        on right: 5
    proto_decl <node> (58)
        on left: 19
        on right: 6
    params <node> (59)
        on left: 20 21 22
        on right: 18 19
    param_list <node> (60)
        on left: 23 24
        on right: 20 23
    param <node> (61)
        on left: 25 26
        on right: 23 24
    compound_stmt <node> (62)
        on left: 27
        on right: 18 31
    stmt_list <node> (63)
        on left: 28 29
        on right: 27 28
    stmt <node> (64)
        on left: 30 31 32 33 34 35 36
        on right: 28 39 40 41
    expression_stmt <node> (65)
        on left: 37 38
        on right: 30
    selection_stmt <node> (66)
        on left: 39 40
        on right: 32
    iteration_stmt <node> (67)
        on left: 41
        on right: 33
    return_stmt <node> (68)
        on left: 42 43
        on right: 34
    expression <node> (69)
        on left: 44 45
        on right: 13 37 39 40 41 43 44 47 61 73 74
    variable <node> (70)
        on left: 46 47
        on right: 44 63
    relation_expr <node> (71)
        on left: 48 49 50 51 52 53 54
        on right: 45 48 49 50 51 52 53
    addition <node> (72)
        on left: 55 56 57
        on right: 48 49 50 51 52 53 54 55 56
    term <node> (73)
        on left: 58 59 60
        on right: 55 56 57 58 59
    factor <node> (74)
        on left: 61 62 63 64 65
        on right: 58 59 60 62
    value <node> (75)
        on left: 66 67 68 69
        on right: 65
    call <node> (76)
        on left: 70
        on right: 64
    args <node> (77)
        on left: 71 72
        on right: 70
    arg_list <node> (78)
        on left: 73 74
        on right: 71 73


State 0

    0 $accept: . program $end

    COMMENT  shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    BOOL     shift, and go to state 4
    VOID     shift, and go to state 5

    program         go to state 6
    decl_list       go to state 7
    decl            go to state 8
    var_decl        go to state 9
    type_specifier  go to state 10
    func_decl       go to state 11
    proto_decl      go to state 12


State 1

    7 decl: COMMENT .

    $default  reduce using rule 7 (decl)


State 2

   14 type_specifier: INT .

    $default  reduce using rule 14 (type_specifier)


State 3

   15 type_specifier: FLOAT .

    $default  reduce using rule 15 (type_specifier)


State 4

   16 type_specifier: BOOL .

    $default  reduce using rule 16 (type_specifier)


State 5

   17 type_specifier: VOID .

    $default  reduce using rule 17 (type_specifier)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 13


State 7

    1 program: decl_list .
    2 decl_list: decl_list . decl

    COMMENT  shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    BOOL     shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 1 (program)

    decl            go to state 14
    var_decl        go to state 9
    type_specifier  go to state 10
    func_decl       go to state 11
    proto_decl      go to state 12


State 8

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 9

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 10

    8 var_decl: type_specifier . vars SEMICOLON
   18 func_decl: type_specifier . IDENTIFIER LEFTP params RIGHTP compound_stmt
   19 proto_decl: type_specifier . IDENTIFIER LEFTP params RIGHTP SEMICOLON

    IDENTIFIER  shift, and go to state 15

    vars  go to state 16
    var   go to state 17


State 11

    5 decl: func_decl .

    $default  reduce using rule 5 (decl)


State 12

    6 decl: proto_decl .

    $default  reduce using rule 6 (decl)


State 13

    0 $accept: program $end .

    $default  accept


State 14

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 15

   11 var: IDENTIFIER .
   12    | IDENTIFIER . LEFTSB INTEGER_VALUE RIGHTSB
   13    | IDENTIFIER . ASSIGN expression
   18 func_decl: type_specifier IDENTIFIER . LEFTP params RIGHTP compound_stmt
   19 proto_decl: type_specifier IDENTIFIER . LEFTP params RIGHTP SEMICOLON

    LEFTP   shift, and go to state 18
    LEFTSB  shift, and go to state 19
    ASSIGN  shift, and go to state 20

    $default  reduce using rule 11 (var)


State 16

    8 var_decl: type_specifier vars . SEMICOLON
    9 vars: vars . COMMA var

    SEMICOLON  shift, and go to state 21
    COMMA      shift, and go to state 22


State 17

   10 vars: var .

    $default  reduce using rule 10 (vars)


State 18

   18 func_decl: type_specifier IDENTIFIER LEFTP . params RIGHTP compound_stmt
   19 proto_decl: type_specifier IDENTIFIER LEFTP . params RIGHTP SEMICOLON

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 23

    $default  reduce using rule 22 (params)

    type_specifier  go to state 24
    params          go to state 25
    param_list      go to state 26
    param           go to state 27


State 19

   12 var: IDENTIFIER LEFTSB . INTEGER_VALUE RIGHTSB

    INTEGER_VALUE  shift, and go to state 28


State 20

   13 var: IDENTIFIER ASSIGN . expression

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 36
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 21

    8 var_decl: type_specifier vars SEMICOLON .

    $default  reduce using rule 8 (var_decl)


State 22

    9 vars: vars COMMA . var

    IDENTIFIER  shift, and go to state 44

    var  go to state 45


State 23

   17 type_specifier: VOID .
   21 params: VOID .

    RIGHTP    reduce using rule 21 (params)
    $default  reduce using rule 17 (type_specifier)


State 24

   25 param: type_specifier . IDENTIFIER
   26      | type_specifier . IDENTIFIER LEFTSB RIGHTSB

    IDENTIFIER  shift, and go to state 46


State 25

   18 func_decl: type_specifier IDENTIFIER LEFTP params . RIGHTP compound_stmt
   19 proto_decl: type_specifier IDENTIFIER LEFTP params . RIGHTP SEMICOLON

    RIGHTP  shift, and go to state 47


State 26

   20 params: param_list .
   23 param_list: param_list . COMMA param

    COMMA  shift, and go to state 48

    $default  reduce using rule 20 (params)


State 27

   24 param_list: param .

    $default  reduce using rule 24 (param_list)


State 28

   12 var: IDENTIFIER LEFTSB INTEGER_VALUE . RIGHTSB

    RIGHTSB  shift, and go to state 49


State 29

   61 factor: LEFTP . expression RIGHTP

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 50
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 30

   46 variable: IDENTIFIER .
   47         | IDENTIFIER . LEFTSB expression RIGHTSB
   70 call: IDENTIFIER . LEFTP args RIGHTP

    LEFTP   shift, and go to state 51
    LEFTSB  shift, and go to state 52

    $default  reduce using rule 46 (variable)


State 31

   66 value: INTEGER_VALUE .

    $default  reduce using rule 66 (value)


State 32

   67 value: FLOAT_VALUE .

    $default  reduce using rule 67 (value)


State 33

   69 value: FALSE .

    $default  reduce using rule 69 (value)


State 34

   68 value: TRUE .

    $default  reduce using rule 68 (value)


State 35

   62 factor: SUB . factor

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    factor    go to state 54
    value     go to state 42
    call      go to state 43


State 36

   13 var: IDENTIFIER ASSIGN expression .

    $default  reduce using rule 13 (var)


State 37

   44 expression: variable . ASSIGN expression
   63 factor: variable .

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 63 (factor)


State 38

   45 expression: relation_expr .
   48 relation_expr: relation_expr . LE addition
   49              | relation_expr . LT addition
   50              | relation_expr . GT addition
   51              | relation_expr . GE addition
   52              | relation_expr . EQ addition
   53              | relation_expr . NEQ addition

    GT   shift, and go to state 56
    LT   shift, and go to state 57
    EQ   shift, and go to state 58
    NEQ  shift, and go to state 59
    GE   shift, and go to state 60
    LE   shift, and go to state 61

    $default  reduce using rule 45 (expression)


State 39

   54 relation_expr: addition .
   55 addition: addition . ADD term
   56         | addition . SUB term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 54 (relation_expr)


State 40

   57 addition: term .
   58 term: term . MUL factor
   59     | term . DIV factor

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65

    $default  reduce using rule 57 (addition)


State 41

   60 term: factor .

    $default  reduce using rule 60 (term)


State 42

   65 factor: value .

    $default  reduce using rule 65 (factor)


State 43

   64 factor: call .

    $default  reduce using rule 64 (factor)


State 44

   11 var: IDENTIFIER .
   12    | IDENTIFIER . LEFTSB INTEGER_VALUE RIGHTSB
   13    | IDENTIFIER . ASSIGN expression

    LEFTSB  shift, and go to state 19
    ASSIGN  shift, and go to state 20

    $default  reduce using rule 11 (var)


State 45

    9 vars: vars COMMA var .

    $default  reduce using rule 9 (vars)


State 46

   25 param: type_specifier IDENTIFIER .
   26      | type_specifier IDENTIFIER . LEFTSB RIGHTSB

    LEFTSB  shift, and go to state 66

    $default  reduce using rule 25 (param)


State 47

   18 func_decl: type_specifier IDENTIFIER LEFTP params RIGHTP . compound_stmt
   19 proto_decl: type_specifier IDENTIFIER LEFTP params RIGHTP . SEMICOLON

    SEMICOLON  shift, and go to state 67
    LEFTB      shift, and go to state 68

    compound_stmt  go to state 69


State 48

   23 param_list: param_list COMMA . param

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    type_specifier  go to state 24
    param           go to state 70


State 49

   12 var: IDENTIFIER LEFTSB INTEGER_VALUE RIGHTSB .

    $default  reduce using rule 12 (var)


State 50

   61 factor: LEFTP expression . RIGHTP

    RIGHTP  shift, and go to state 71


State 51

   70 call: IDENTIFIER LEFTP . args RIGHTP

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    $default  reduce using rule 72 (args)

    expression     go to state 72
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43
    args           go to state 73
    arg_list       go to state 74


State 52

   47 variable: IDENTIFIER LEFTSB . expression RIGHTSB

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 75
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 53

   63 factor: variable .

    $default  reduce using rule 63 (factor)


State 54

   62 factor: SUB factor .

    $default  reduce using rule 62 (factor)


State 55

   44 expression: variable ASSIGN . expression

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 76
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 56

   50 relation_expr: relation_expr GT . addition

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    addition  go to state 77
    term      go to state 40
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 57

   49 relation_expr: relation_expr LT . addition

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    addition  go to state 78
    term      go to state 40
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 58

   52 relation_expr: relation_expr EQ . addition

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    addition  go to state 79
    term      go to state 40
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 59

   53 relation_expr: relation_expr NEQ . addition

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    addition  go to state 80
    term      go to state 40
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 60

   51 relation_expr: relation_expr GE . addition

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    addition  go to state 81
    term      go to state 40
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 61

   48 relation_expr: relation_expr LE . addition

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    addition  go to state 82
    term      go to state 40
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 62

   55 addition: addition ADD . term

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    term      go to state 83
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 63

   56 addition: addition SUB . term

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    term      go to state 84
    factor    go to state 41
    value     go to state 42
    call      go to state 43


State 64

   58 term: term MUL . factor

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    factor    go to state 85
    value     go to state 42
    call      go to state 43


State 65

   59 term: term DIV . factor

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    variable  go to state 53
    factor    go to state 86
    value     go to state 42
    call      go to state 43


State 66

   26 param: type_specifier IDENTIFIER LEFTSB . RIGHTSB

    RIGHTSB  shift, and go to state 87


State 67

   19 proto_decl: type_specifier IDENTIFIER LEFTP params RIGHTP SEMICOLON .

    $default  reduce using rule 19 (proto_decl)


State 68

   27 compound_stmt: LEFTB . stmt_list RIGHTB

    $default  reduce using rule 29 (stmt_list)

    stmt_list  go to state 88


State 69

   18 func_decl: type_specifier IDENTIFIER LEFTP params RIGHTP compound_stmt .

    $default  reduce using rule 18 (func_decl)


State 70

   23 param_list: param_list COMMA param .

    $default  reduce using rule 23 (param_list)


State 71

   61 factor: LEFTP expression RIGHTP .

    $default  reduce using rule 61 (factor)


State 72

   74 arg_list: expression .

    $default  reduce using rule 74 (arg_list)


State 73

   70 call: IDENTIFIER LEFTP args . RIGHTP

    RIGHTP  shift, and go to state 89


State 74

   71 args: arg_list .
   73 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 90

    $default  reduce using rule 71 (args)


State 75

   47 variable: IDENTIFIER LEFTSB expression . RIGHTSB

    RIGHTSB  shift, and go to state 91


State 76

   44 expression: variable ASSIGN expression .

    $default  reduce using rule 44 (expression)


State 77

   50 relation_expr: relation_expr GT addition .
   55 addition: addition . ADD term
   56         | addition . SUB term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 50 (relation_expr)


State 78

   49 relation_expr: relation_expr LT addition .
   55 addition: addition . ADD term
   56         | addition . SUB term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 49 (relation_expr)


State 79

   52 relation_expr: relation_expr EQ addition .
   55 addition: addition . ADD term
   56         | addition . SUB term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 52 (relation_expr)


State 80

   53 relation_expr: relation_expr NEQ addition .
   55 addition: addition . ADD term
   56         | addition . SUB term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 53 (relation_expr)


State 81

   51 relation_expr: relation_expr GE addition .
   55 addition: addition . ADD term
   56         | addition . SUB term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 51 (relation_expr)


State 82

   48 relation_expr: relation_expr LE addition .
   55 addition: addition . ADD term
   56         | addition . SUB term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 48 (relation_expr)


State 83

   55 addition: addition ADD term .
   58 term: term . MUL factor
   59     | term . DIV factor

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65

    $default  reduce using rule 55 (addition)


State 84

   56 addition: addition SUB term .
   58 term: term . MUL factor
   59     | term . DIV factor

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65

    $default  reduce using rule 56 (addition)


State 85

   58 term: term MUL factor .

    $default  reduce using rule 58 (term)


State 86

   59 term: term DIV factor .

    $default  reduce using rule 59 (term)


State 87

   26 param: type_specifier IDENTIFIER LEFTSB RIGHTSB .

    $default  reduce using rule 26 (param)


State 88

   27 compound_stmt: LEFTB stmt_list . RIGHTB
   28 stmt_list: stmt_list . stmt

    SEMICOLON      shift, and go to state 92
    LEFTP          shift, and go to state 29
    LEFTB          shift, and go to state 68
    RIGHTB         shift, and go to state 93
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IF             shift, and go to state 96
    IDENTIFIER     shift, and go to state 30
    COMMENT        shift, and go to state 97
    INT            shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VOID           shift, and go to state 5
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    var_decl         go to state 98
    type_specifier   go to state 99
    compound_stmt    go to state 100
    stmt             go to state 101
    expression_stmt  go to state 102
    selection_stmt   go to state 103
    iteration_stmt   go to state 104
    return_stmt      go to state 105
    expression       go to state 106
    variable         go to state 37
    relation_expr    go to state 38
    addition         go to state 39
    term             go to state 40
    factor           go to state 41
    value            go to state 42
    call             go to state 43


State 89

   70 call: IDENTIFIER LEFTP args RIGHTP .

    $default  reduce using rule 70 (call)


State 90

   73 arg_list: arg_list COMMA . expression

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 107
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 91

   47 variable: IDENTIFIER LEFTSB expression RIGHTSB .

    $default  reduce using rule 47 (variable)


State 92

   38 expression_stmt: SEMICOLON .

    $default  reduce using rule 38 (expression_stmt)


State 93

   27 compound_stmt: LEFTB stmt_list RIGHTB .

    $default  reduce using rule 27 (compound_stmt)


State 94

   42 return_stmt: RETURN . SEMICOLON
   43            | RETURN . expression SEMICOLON

    SEMICOLON      shift, and go to state 108
    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 109
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 95

   41 iteration_stmt: WHILE . LEFTP expression RIGHTP stmt

    LEFTP  shift, and go to state 110


State 96

   39 selection_stmt: IF . LEFTP expression RIGHTP stmt
   40               | IF . LEFTP expression RIGHTP stmt ELSE stmt

    LEFTP  shift, and go to state 111


State 97

   36 stmt: COMMENT .

    $default  reduce using rule 36 (stmt)


State 98

   35 stmt: var_decl .

    $default  reduce using rule 35 (stmt)


State 99

    8 var_decl: type_specifier . vars SEMICOLON

    IDENTIFIER  shift, and go to state 44

    vars  go to state 16
    var   go to state 17


State 100

   31 stmt: compound_stmt .

    $default  reduce using rule 31 (stmt)


State 101

   28 stmt_list: stmt_list stmt .

    $default  reduce using rule 28 (stmt_list)


State 102

   30 stmt: expression_stmt .

    $default  reduce using rule 30 (stmt)


State 103

   32 stmt: selection_stmt .

    $default  reduce using rule 32 (stmt)


State 104

   33 stmt: iteration_stmt .

    $default  reduce using rule 33 (stmt)


State 105

   34 stmt: return_stmt .

    $default  reduce using rule 34 (stmt)


State 106

   37 expression_stmt: expression . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 107

   73 arg_list: arg_list COMMA expression .

    $default  reduce using rule 73 (arg_list)


State 108

   42 return_stmt: RETURN SEMICOLON .

    $default  reduce using rule 42 (return_stmt)


State 109

   43 return_stmt: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 113


State 110

   41 iteration_stmt: WHILE LEFTP . expression RIGHTP stmt

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 114
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 111

   39 selection_stmt: IF LEFTP . expression RIGHTP stmt
   40               | IF LEFTP . expression RIGHTP stmt ELSE stmt

    LEFTP          shift, and go to state 29
    IDENTIFIER     shift, and go to state 30
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    expression     go to state 115
    variable       go to state 37
    relation_expr  go to state 38
    addition       go to state 39
    term           go to state 40
    factor         go to state 41
    value          go to state 42
    call           go to state 43


State 112

   37 expression_stmt: expression SEMICOLON .

    $default  reduce using rule 37 (expression_stmt)


State 113

   43 return_stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 43 (return_stmt)


State 114

   41 iteration_stmt: WHILE LEFTP expression . RIGHTP stmt

    RIGHTP  shift, and go to state 116


State 115

   39 selection_stmt: IF LEFTP expression . RIGHTP stmt
   40               | IF LEFTP expression . RIGHTP stmt ELSE stmt

    RIGHTP  shift, and go to state 117


State 116

   41 iteration_stmt: WHILE LEFTP expression RIGHTP . stmt

    SEMICOLON      shift, and go to state 92
    LEFTP          shift, and go to state 29
    LEFTB          shift, and go to state 68
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IF             shift, and go to state 96
    IDENTIFIER     shift, and go to state 30
    COMMENT        shift, and go to state 97
    INT            shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VOID           shift, and go to state 5
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    var_decl         go to state 98
    type_specifier   go to state 99
    compound_stmt    go to state 100
    stmt             go to state 118
    expression_stmt  go to state 102
    selection_stmt   go to state 103
    iteration_stmt   go to state 104
    return_stmt      go to state 105
    expression       go to state 106
    variable         go to state 37
    relation_expr    go to state 38
    addition         go to state 39
    term             go to state 40
    factor           go to state 41
    value            go to state 42
    call             go to state 43


State 117

   39 selection_stmt: IF LEFTP expression RIGHTP . stmt
   40               | IF LEFTP expression RIGHTP . stmt ELSE stmt

    SEMICOLON      shift, and go to state 92
    LEFTP          shift, and go to state 29
    LEFTB          shift, and go to state 68
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IF             shift, and go to state 96
    IDENTIFIER     shift, and go to state 30
    COMMENT        shift, and go to state 97
    INT            shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VOID           shift, and go to state 5
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    var_decl         go to state 98
    type_specifier   go to state 99
    compound_stmt    go to state 100
    stmt             go to state 119
    expression_stmt  go to state 102
    selection_stmt   go to state 103
    iteration_stmt   go to state 104
    return_stmt      go to state 105
    expression       go to state 106
    variable         go to state 37
    relation_expr    go to state 38
    addition         go to state 39
    term             go to state 40
    factor           go to state 41
    value            go to state 42
    call             go to state 43


State 118

   41 iteration_stmt: WHILE LEFTP expression RIGHTP stmt .

    $default  reduce using rule 41 (iteration_stmt)


State 119

   39 selection_stmt: IF LEFTP expression RIGHTP stmt .
   40               | IF LEFTP expression RIGHTP stmt . ELSE stmt

    ELSE  shift, and go to state 120

    ELSE      [reduce using rule 39 (selection_stmt)]
    $default  reduce using rule 39 (selection_stmt)


State 120

   40 selection_stmt: IF LEFTP expression RIGHTP stmt ELSE . stmt

    SEMICOLON      shift, and go to state 92
    LEFTP          shift, and go to state 29
    LEFTB          shift, and go to state 68
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IF             shift, and go to state 96
    IDENTIFIER     shift, and go to state 30
    COMMENT        shift, and go to state 97
    INT            shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VOID           shift, and go to state 5
    INTEGER_VALUE  shift, and go to state 31
    FLOAT_VALUE    shift, and go to state 32
    FALSE          shift, and go to state 33
    TRUE           shift, and go to state 34
    SUB            shift, and go to state 35

    var_decl         go to state 98
    type_specifier   go to state 99
    compound_stmt    go to state 100
    stmt             go to state 121
    expression_stmt  go to state 102
    selection_stmt   go to state 103
    iteration_stmt   go to state 104
    return_stmt      go to state 105
    expression       go to state 106
    variable         go to state 37
    relation_expr    go to state 38
    addition         go to state 39
    term             go to state 40
    factor           go to state 41
    value            go to state 42
    call             go to state 43


State 121

   40 selection_stmt: IF LEFTP expression RIGHTP stmt ELSE stmt .

    $default  reduce using rule 40 (selection_stmt)
